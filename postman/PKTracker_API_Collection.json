{
  "info": {
    "name": "PKTracker API Collection",
    "description": "Comprehensive API collection for PKTracker Backend with Laravel 11 + Passport Authentication",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://127.0.0.1:8000",
      "type": "string"
    },
    {
      "key": "api_version",
      "value": "v1",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "admin_email",
      "value": "admin@example.com",
      "type": "string"
    },
    {
      "key": "admin_password",
      "value": "password",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "role_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "permission_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîç Health & Status",
      "item": [
        {
          "name": "Health Check - Basic",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/health",
              "host": ["{{base_url}}"],
              "path": ["api", "health"]
            }
          },
          "response": []
        },
        {
          "name": "Health Check - Detailed",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/health/detailed",
              "host": ["{{base_url}}"],
              "path": ["api", "health", "detailed"]
            }
          },
          "response": []
        },
        {
          "name": "API Test Endpoint",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/test",
              "host": ["{{base_url}}"],
              "path": ["api", "test"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Register New User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\",\n  \"password_confirmation\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Login - Admin User",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.access_token) {",
                  "        pm.collectionVariables.set('access_token', response.access_token);",
                  "        pm.test('Access token saved to collection variable', function () {",
                  "            pm.expect(response.access_token).to.not.be.undefined;",
                  "        });",
                  "    }",
                  "    if (response.user && response.user.id) {",
                  "        pm.collectionVariables.set('user_id', response.user.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{admin_email}}\",\n  \"password\": \"{{admin_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Login - Test User",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.access_token) {",
                  "        pm.collectionVariables.set('access_token', response.access_token);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Get Current User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/auth/user",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "auth", "user"]
            }
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.access_token) {",
                  "        pm.collectionVariables.set('access_token', response.access_token);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "auth", "refresh"]
            }
          },
          "response": []
        },
        {
          "name": "Logout Current Session",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "auth", "logout"]
            }
          },
          "response": []
        },
        {
          "name": "Logout All Sessions",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/auth/logout-all",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "auth", "logout-all"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üë• User Management",
      "item": [
        {
          "name": "List All Users",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/users",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "users"]
            }
          },
          "response": []
        },
        {
          "name": "List Users with Filters",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/users?filter[name]=admin&sort=-created_at&include=roles,permissions&page=1&per_page=10",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "users"],
              "query": [
                {
                  "key": "filter[name]",
                  "value": "admin"
                },
                {
                  "key": "sort",
                  "value": "-created_at"
                },
                {
                  "key": "include",
                  "value": "roles,permissions"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create New User",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.id) {",
                  "        pm.collectionVariables.set('user_id', response.data.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"secure123\",\n  \"password_confirmation\": \"secure123\",\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/users",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "users"]
            }
          },
          "response": []
        },
        {
          "name": "Get User by ID",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "users", "{{user_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe Updated\",\n  \"email\": \"john.doe.updated@example.com\",\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "users", "{{user_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Toggle User Status",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PATCH",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/users/{{user_id}}/toggle-status",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "users", "{{user_id}}", "toggle-status"]
            }
          },
          "response": []
        },
        {
          "name": "Assign Roles to User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"roles\": [\"editor\", \"moderator\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/users/{{user_id}}/roles",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "users", "{{user_id}}", "roles"]
            }
          },
          "response": []
        },
        {
          "name": "Remove Roles from User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"roles\": [\"editor\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/users/{{user_id}}/roles",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "users", "{{user_id}}", "roles"]
            }
          },
          "response": []
        },
        {
          "name": "Soft Delete User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "users", "{{user_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Restore Deleted User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/users/{{user_id}}/restore",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "users", "{{user_id}}", "restore"]
            }
          },
          "response": []
        },
        {
          "name": "Force Delete User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/users/{{user_id}}/force",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "users", "{{user_id}}", "force"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîí Roles Management",
      "item": [
        {
          "name": "List All Roles",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/roles",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "roles"]
            }
          },
          "response": []
        },
        {
          "name": "Create New Role",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.id) {",
                  "        pm.collectionVariables.set('role_id', response.data.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"test-role\",\n  \"display_name\": \"Test Role\",\n  \"description\": \"A test role for API testing\",\n  \"permissions\": [\"view-users\", \"create-users\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/roles",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "roles"]
            }
          },
          "response": []
        },
        {
          "name": "Get Role by ID",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/roles/{{role_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "roles", "{{role_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update Role",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"test-role-updated\",\n  \"display_name\": \"Test Role Updated\",\n  \"description\": \"An updated test role\",\n  \"permissions\": [\"view-users\", \"create-users\", \"edit-users\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/roles/{{role_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "roles", "{{role_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Role",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/roles/{{role_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "roles", "{{role_id}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîë Permissions Management",
      "item": [
        {
          "name": "List All Permissions",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/permissions",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "permissions"]
            }
          },
          "response": []
        },
        {
          "name": "Create New Permission",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.id) {",
                  "        pm.collectionVariables.set('permission_id', response.data.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"test-permission\",\n  \"display_name\": \"Test Permission\",\n  \"description\": \"A test permission for API testing\",\n  \"guard_name\": \"api\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/permissions",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "permissions"]
            }
          },
          "response": []
        },
        {
          "name": "Get Permission by ID",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/permissions/{{permission_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "permissions", "{{permission_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update Permission",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"test-permission-updated\",\n  \"display_name\": \"Test Permission Updated\",\n  \"description\": \"An updated test permission\",\n  \"guard_name\": \"api\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/permissions/{{permission_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "permissions", "{{permission_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Permission",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/permissions/{{permission_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "permissions", "{{permission_id}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üß™ Error Testing",
      "item": [
        {
          "name": "401 - Unauthorized Access",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/users",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "users"]
            }
          },
          "response": []
        },
        {
          "name": "404 - Not Found",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/users/99999",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "users", "99999"]
            }
          },
          "response": []
        },
        {
          "name": "422 - Validation Error",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"\",\n  \"email\": \"invalid-email\",\n  \"password\": \"123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/users",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "users"]
            }
          },
          "response": []
        },
        {
          "name": "Invalid API Endpoint",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/{{api_version}}/nonexistent",
              "host": ["{{base_url}}"],
              "path": ["api", "{{api_version}}", "nonexistent"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global pre-request script",
          "console.log('Making request to:', pm.request.url.toString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script",
          "pm.test('Response time is less than 2000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(2000);",
          "});",
          "",
          "pm.test('Response has Content-Type header', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "// Log response for debugging",
          "if (pm.response.code >= 400) {",
          "    console.log('Error Response:', pm.response.text());",
          "}"
        ]
      }
    }
  ]
}
